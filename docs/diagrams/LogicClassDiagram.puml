@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic {

package Parser {
Interface Parser <<Interface>>
Class ParserManager
Class XYZCommandParser
Class SpecificModeParser
Class ClassUtil
}

package Command {
Class XYZCommand
Class CommandResult
Class "{abstract}\nCommand" as Command
}


Interface UiLogicHelper <<Interface>>
Interface Logic <<Interface>>
Class LogicManager
}


package Model{
Class HiddenModel #FFFFFF
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Logic
HiddenOutside ..> UiLogicHelper

Logic -up-|> UiLogicHelper

LogicManager .up.|> Logic
LogicManager -->"1" ParserManager
ParserManager .left.> SpecificModeParser
SpecificModeParser .left.> ClassUtil
ClassUtil .left.> XYZCommandParser

XYZCommandParser ..> XYZCommand : creates >
XYZCommandParser ..|> Parser
XYZCommand -up-|> Command
LogicManager .left.> Command : executes >

LogicManager --> Model
Command .right.> Model
note right of XYZCommand: XYZCommand = AddCommand, \nFindCommand, etc

Logic ..> CommandResult
LogicManager .down.> CommandResult
Command .up.> CommandResult
CommandResult -[hidden]-> Parser
@enduml
